spring:
  datasource:
    username: sa
    password:
    url: jdbc:h2:tcp://localhost/~/test

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create

  security:
    oauth2:
      client:
        registration:
          google:
            clientId:
            clientSecret:
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId:
            clientSecret:
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}" # Note that facebook now mandates the use of https redirect URIs, so make sure your app supports https in production
            scope:
              - email
              - public_profile
      provider:
        facebook:
          authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
          tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
          userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
  app:
    auth:
      tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
      tokenExpirationMsec: 864000000
    cors:
      allowedOrigins: http://localhost:3000
    oauth2:
      authorizedRedirectUris:
        - http://localhost:3000/oauth2/redirect
        - http://localhost:8080/oauth2/redirect
        - http://localhost:8080/oauth2/redirect

    servlet:
      multipart:
        max-file-size: 50MB
