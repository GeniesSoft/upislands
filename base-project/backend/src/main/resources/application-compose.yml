spring:
  datasource:
    username: root
    password: root
    url: jdbc:mysql://app-db:3306/app_db

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: create

  security:
    oauth2:
      client:
        registration:
          google:
            clientId:
            clientSecret:
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId:
            clientSecret:
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}" # Note that facebook now mandates the use of https redirect URIs, so make sure your app supports https in production
            scope:
              - email
              - public_profile
      provider:
        facebook:
          authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
          tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
          userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    tokenSecret:
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost, http://localhost:81
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - http://localhost:8080/oauth2/redirect
      - http://localhost:8080/oauth2/redirect

  servlet:
    multipart:
      max-file-size: 50MB